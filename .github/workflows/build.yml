# Schema: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
# Action docs:
# https://github.com/actions/checkout
# https://github.com/actions/cache

name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    name: Detect Changes
    outputs:
      docker: ${{ steps.docker.outputs.changed }}
      php: ${{ steps.php.outputs.changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine diff range
        id: diff-range
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            git fetch origin ${{ github.base_ref }}
            BASE=$(git merge-base HEAD origin/${{ github.base_ref }})
            echo "base=$BASE" >> $GITHUB_OUTPUT
            echo "head=HEAD" >> $GITHUB_OUTPUT
          else
            echo "base=${{ github.event.before }}" >> $GITHUB_OUTPUT
            echo "head=${{ github.sha }}" >> $GITHUB_OUTPUT
          fi

      - name: Check for Docker changes
        id: docker
        run: |
          DOCKER_PATTERN='Dockerfile|compose\.yml'
          if git diff --name-only ${{ steps.diff-range.outputs.base }} ${{ steps.diff-range.outputs.head }} | grep -E "$DOCKER_PATTERN"; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Check for PHP changes
        id: php
        run: |
          PHP_PATTERN='\.php$|phpspec\.yml|composer\.'
          if git diff --name-only ${{ steps.diff-range.outputs.base }} ${{ steps.diff-range.outputs.head }} | grep -E "$PHP_PATTERN"; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.docker == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('.docker/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          docker buildx build \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            -f .docker/Dockerfile \
            -t test-image .

  php-tests:
    name: PHP Tests
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.php == 'true'
    strategy:
      matrix:
        php-version: [8.4]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP Action
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: composer:v2

      - name: Validate composer.json
        run: composer validate --strict

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer packages
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run Tests
        run: composer run-script test
